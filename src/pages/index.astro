---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import TechStack from "../components/TechStack.astro";

var myHeaders = new Headers();
myHeaders.append("Notion-Version", "2021-05-13");
myHeaders.append(
	"Authorization",
	`Bearer ${import.meta.env.PUBLIC_NOTION_API_KEY}`
);

let requestOptions: RequestInit = {
	method: "POST",
	headers: myHeaders,
	redirect: "follow",
};

let requestPayload: any[] = [];
let blogPostsPayload: any[] = [];
let AboutMeText: String = "",
	PhotoURL: String = "";

await fetch(
	`https://api.notion.com/v1/databases/${
		import.meta.env.PUBLIC_DATABASE_ID
	}/query`,
	requestOptions
)
	.then((response) => response.json()) // remove '.results' from this line
	.then((data) => {
		requestPayload = data.results; // access 'results' property here

		blogPostsPayload = requestPayload?.filter(
			(item) => item.properties.type.select.name === "BLOGPOST"
		);

		AboutMeText = requestPayload?.filter(
			(item) =>
				item.properties.title.title[0].text.content === "ABOUT_TEXT"
		)[0].properties.value.rich_text[0].text.content;

		PhotoURL = requestPayload?.filter(
			(item) =>
				item.properties.title.title[0].text.content === "PHOTO_URL"
		)[0].properties.value.rich_text[0].text.content;
	})
	.catch((error) => console.log("error", error));
---

<Layout title="Eduardo Cappellotto">
	<main>
		<Header profilePhotoUrl={PhotoURL} />

		<h3><code>Tech Stack</code></h3>

		<section role="list">
			<TechStack
				icons={[
					"teenyicons:vue-solid",
					"cib:typescript",
					"teenyicons:nodejs-solid",
					"mdi:aws",
					"codicon:azure-devops",
				]}
			/>
		</section>

		<h3><code>About me</code></h3>
		<p set:html={AboutMeText} class="instructions" />

		<h3><code>Blog Posts</code></h3>

		{
			blogPostsPayload.map((tag) => (
				<Card
					href={tag.properties.link.rich_text[0].text.content}
					title={tag.properties.title.title[0].text.content}
					text={tag.properties.description.rich_text[0].text.content}
					imgUrl={tag.properties.thumbnail.files[0].name}
					tags={tag.properties.tags.multi_select}
				/>
			))
		}

		<section>
			<div>Github Projects and its description</div>
		</section>

		<div>Contact me</div>
	</main>
	<Footer />
</Layout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60vw;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}

	h3 {
		text-align: center;
	}

	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}

	code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}

	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
</style>
